from config import Config
import logging

logger = logging.getLogger(__name__)

translations = {
    "ru": {
        "GDPR_TEXT": "üîí –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –Ω–∞—à—É –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏...",
        "accept_button": "‚úÖ –Ø –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è",
        "gdpr_error": "‚ùå –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è",
        "enter_phone": "üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX:",
        "invalid_phone_format": "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞",
        "enter_otp": "üîë –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥: {otp_code}",
        "invalid_otp": "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
        "enter_full_name": "üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–ò–º—è –§–∞–º–∏–ª–∏—è):",
        "invalid_full_name": "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é",
        "enter_city": "üåç –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é:",
        "geocoding_error": "‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: {error}",
        "registration_complete": "üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
        "registration_error": "‚õî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
    },
    "en": {
        "GDPR_TEXT": "üîí You must accept our privacy policy to continue...",
        "accept_button": "‚úÖ I accept the terms",
        "gdpr_error": "‚ùå You must accept the terms to continue",
        "enter_phone": "üì± Enter phone number in +XXXXXXXXXXX format:",
        "invalid_phone_format": "‚ùå Invalid phone format",
        "enter_otp": "üîë Enter verification code: {otp_code}",
        "invalid_otp": "‚ùå Invalid verification code",
        "enter_full_name": "üë§ Enter your full name (First Last):",
        "invalid_full_name": "‚ùå Please enter first and last name",
        "enter_city": "üåç Enter your city or share location:",
        "geocoding_error": "‚ùå Location error: {error}",
        "registration_complete": "üéâ Registration completed!",
        "registration_error": "‚õî Registration failed"
    }
}

def translate(key: str, language: str = Config.DEFAULT_LANGUAGE) -> str:
    try:
        lang_dict = translations.get(language, translations[Config.DEFAULT_LANGUAGE])
        return lang_dict[key]
    except KeyError as e:
        logger.error(f"Missing translation key: {str(e)}")
        return f"[{key}]"
    except Exception as e:
        logger.error(f"Translation error: {str(e)}")
        return "‚ö†Ô∏è System error"